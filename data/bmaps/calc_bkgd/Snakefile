import pickle
from bgspy.utils import load_bkgd_runs, load_seqlens
from bgspy.utils import interpolate_calc_bkgd

#AUTOS = list(range(1, 23))
AUTOS = [10] # test run of only chr10
BKGD = "~/src/bkgd/calc_bkgd"

# there are mirroed from the simulation files
muts = [1e-10, 3.16e-10, 1e-9, 3.16e-9, 1e-8, 3.16e-8]
selcoefs = [0.0001, 0.000316, 0.001, 0.00316, 0.01, 0.0316, 0.1]

bkgd_files = [f"calc_bkgd_mu{mu}_s{selcoef}/chr{chr}.bkgd" for chr in AUTOS for selcoef in selcoefs for mu in muts]

SEQLENS = "../../annotation/hg38_seqlens.tsv"
ANNOT = ([f"../../annotation/HapMapII_GRCh37_liftedOverTo_Hg38/genetic_map_Hg38_chr{chr}.txt" for chr in AUTOS] + 
         [f"../../annotation/conserved_phastcons_thresh0_slop1k_chr{chr}.bed" for chr in AUTOS] + 
         [SEQLENS])

rule calc_bkgd:
  input: conf="calc_bkgd.conf", annot=ANNOT
  output: [f"calc_bkgd_mu{{mu}}_s{{selcoef}}/chr{chr}.bkgd" for chr in AUTOS]
  shell:
     f"""
     mkdir -p calc_bkgd_mu{{wildcards.mu}}_s{{wildcards.selcoef}}
     {BKGD} {{input.conf}} PARAM_U={{wildcards.mu}} PARAM_T={{wildcards.selcoef}} OUTPUT_DIR=calc_bkgd_mu{{wildcards.mu}}_s{{wildcards.selcoef}}
     """

rule calc_bgkd:
  input: bkgd_files
  output: pkl="calc_bkgd.pkl"
  run:
    Bs = load_bkgd_runs('.')
    with open(output.pkl, 'wb') as f:
      pickle.dump(Bs, f)

rule interpol:
  input: pkl="calc_bkgd.pkl", seqlens=SEQLENS
  output: pkl="calc_bkgd_{width}.pkl"
  run:
    with open(input.pkl, 'rb') as f:
      results = pickle.load(f)
    seqlens = load_seqlens(input.seqlens)
    Bs = interpolate_calc_bkgd(results, int(wildcards.width), seqlens)
    Bs.save(output.pkl)

rule all:
  input: "calc_bkgd_1000.pkl", "calc_bkgd.pkl", "calc_bkgd_100000.pkl"
