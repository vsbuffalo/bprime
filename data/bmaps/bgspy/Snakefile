from os.path import join
import json
import numpy as np
from bgspy.models import BGSModel 
from bgspy.genome import Genome

NCORES = 70
NCORES_BP = 40

# ===== For Simulations =====
# 
# Note: for next sim run, just use grid-string params, perhaps 
# non phastcons track.
#
CONFIG = '../../../slim_sims/chrombgs/merged_utrs_cds_introns_phastcons.json'

chr10_sim_config = json.load(open(CONFIG))
print(chr10_sim_config)

# note: only the file stem is in the value, rest denotes chrom
cons_track = chr10_sim_config['cons_track'] + '_chr10.bed'
Ns = chr10_sim_config['params']['N']['grid']
assert(len(Ns) == 1)
sims_N = Ns[0]
# for w/t arguments to CL
t = ','.join(map(str, chr10_sim_config['params']['sh']['grid']))
w = ','.join(map(str, chr10_sim_config['params']['mu']['grid']))

rule bmap_chr10:
  input: annot=join("../../annotation/",  cons_track),
         seqlens_file="../../annotation/hg38_seqlens.tsv", 
         recmap="../../annotation/HapMapII_GRCh38/genetic_map_Hg38_chr10.txt"
  output: pkl_b_file="bmap_hg38_sims_{step}step_chr10.pkl"
  params: ncores=NCORES, ncores_bp=NCORES_BP, popsize=sims_N, t=t, w=w
  shell:
    """
    python ../../../bgspy/command_line.py calcb \
      --recmap {input.recmap} --annot {input.annot} \
      --seqlens {input.seqlens_file} \
      --t {params.t} \
      --w {params.w} \
      --output {output} --popsize {params.popsize} --chrom chr10 \
      --ncores {params.ncores} --ncores-Bp {params.ncores_bp} \
      --step {wildcards.step}
    """

rule bmap_chr10_dense:
  input: annot=join("../../annotation/",  cons_track),
         seqlens_file="../../annotation/hg38_seqlens.tsv", 
         recmap="../../annotation/HapMapII_GRCh38/genetic_map_Hg38_chr10.txt"
  output: pkl_b_file="bmap_hg38_sims_{grid_str}grid_{step}step_chr10.pkl"
  params: ncores=NCORES, ncores_bp=NCORES_BP
  shell:
    """
    python ../../../bgspy/command_line.py calcb \
      --recmap {input.recmap} --annot {input.annot} \
      --seqlens {input.seqlens_file} \
      --g '{wildcards.grid_str}' \
      --output {output} --popsize {params.popsize} --chrom chr10 \
      --ncores {params.ncores} --ncores-Bp {params.ncores_bp} \
      --step {wildcards.step}
    """


# ===== For Empirical Work =====

rule bmap_hg38:
  input: annot="../../annotation/conserved_cds_utrs_phastcons.bed.gz", 
         seqlens_file="../../annotation/hg38_seqlens.tsv", 
         recmap="../../annotation/hapmap_genetic_map.txt"
  output: pkl_b_file="bmap_hg38_{grid_str}grid_{step}step_{popsize}N_cds_utrs_phastcons.pkl"
  params: ncores=NCORES, ncores_bp=NCORES_BP
  shell:
    """
    python ../../../bgspy/command_line.py calcb \
      --recmap {input.recmap} --annot {input.annot} \
      --seqlens {input.seqlens_file} --g '{wildcards.grid_str}' \
      --output {output} --popsize {wildcards.popsize} \
      --ncores {params.ncores} --ncores-Bp {params.ncores_bp} \
      --step {wildcards.step}
    """

# The following to rules merge all features into a single type 
# (e.g. features are unlabelled)
rule bmap_hg38_merged:
  input: annot="../../annotation/conserved_cds_utrs_phastcons_merged.bed.gz", 
         seqlens_file="../../annotation/hg38_seqlens.tsv", 
         recmap="../../annotation/hapmap_genetic_map.txt"
  output: pkl_b_file="bmap_hg38_{grid_str}grid_{step}step_{popsize}N_cds_utrs_phastcons_merged.pkl"
  params: ncores=NCORES, ncores_bp=NCORES_BP
  shell:
    """
    python ../../../bgspy/command_line.py calcb \
      --recmap {input.recmap} --annot {input.annot} \
      --seqlens {input.seqlens_file} --g '{wildcards.grid_str}' \
      --output {output} --popsize {wildcards.popsize} \
      --ncores {params.ncores} --ncores-Bp {params.ncores_bp} \
      --step {wildcards.step}
    """


## Target B maps for various purposes

maps = [
        ## merged genomic features with phastcons as a catch all
        "bmap_hg38_6x5grid_10000step_10000N_cds_utrs_phastcons.pkl",

        ## for the simple simulations (uses phastcons currently)
        "bmap_hg38_sims_10000step_chr10.pkl",

        ## unlabelled types -- currently only N=10k
        "bmap_hg38_6x5grid_10000step_10000N_cds_utrs_phastcons_merged.pkl",
        ]

rule test:
  input: "bmap_hg38_sims_10000step_chr10.pkl"

rule all:
  input: maps
