import itertools 
import numpy as np
np.random.seed(1)
from collections import defaultdict, namedtuple
import pickle
import pyslim
import tskit
from bgspy.slim import SlimRuns, read_params
from bgspy.sim_utils import load_b_chrom_sims
from bgspy.samplers import ParamGrid

if not len(config):
    raise ValueError("config file not specified on command line, use --configfile config.json")

# ------- Shared Parameters -------
DATADIR = "../../data/slim_sims/"
SLIM = '~/src/SLiM_build/slim'

# the output of one BGS slim sim (chrombgs.slim)
#SIM_OUTPUTS = ["seldac.tsv.gz", "sub.tsv.gz", "treeseq.tree"]
SIM_OUTPUTS = ["treeseq.tree"]
ANNOT_FILES = ["../../data/annotation/hg38_seqlens.tsv", 
               "../../data/annotation/HapMapII_GRCh37_liftedOverTo_Hg38/genetic_map_Hg38_chr10.txt", 
               "../../data/annotation/conserved_by_chrom/chr10.bed"]

# ------- Simple BGS for B Maps -------
bgs_run = SlimRuns(config, dir=DATADIR, sampler=ParamGrid, sims_subdir=True, split_dirs=3)
bgs_run.generate(SIM_OUTPUTS)

# to get param order for SLiM file
#print(bgs_run.param_order)

bgs_results = bgs_run.targets

# look at first slim runs
#print(list(itertools.islice(bgs_run.slim_commands(), 5)))

rule bgs_map:
  input: bgs_run.script, *ANNOT_FILES
  output: 
    bgs_run.wildcard_output(suffix=SIM_OUTPUTS)
  shell:
    bgs_run.slim_call(slim_cmd=SLIM)

SIM_NP = os.path.join(DATADIR, bgs_run.name, "chr10_B_sims.npz")

rule process:
  input: sims=bgs_run.targets, dir=os.path.join(DATADIR, bgs_run.name, 'sims')
  output: np=SIM_NP
  shell:
    """
    python ../../tools/process_sims.py {input.dir} {output.np}
    """


#rule bgs_dac:
#  input:
#    bgs_run.wildcard_output("treeseq.tree")
#  output: 
#    bgs_run.wildcard_output("dac.tsv.gz")
#  shell:
#      f"""
#      python  ../../tools/treeseq2dac.py \
#        --regions \ ../../data/annotation/neutral_chr{{wildcards.chr}}.bed \
#        --seqlens \ ../../data/annotation/hg38_seqlens.tsv \
#        --recmap ../../data/annotation/hapmap/genetic_map_GRCh37_{{wildcards.chr}}.bed \
#        --mu 1.5e-8 {{input}}
#      """
 

rule all:
  input:
    #sim_results, lls_results, fig_results, bgstrees_results
    bgs_results, SIM_NP
