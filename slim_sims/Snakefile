import sys
sys.path.extend(['../']) # for bprime modules

import itertools 
import numpy as np
np.random.seed(1)
from collections import defaultdict, namedtuple
import pickle
import pyslim
import tskit
from bprime.slim import SlimRuns, read_params

if not len(config):
    raise ValueError("config file not specified on command line, use --configfile config.json")

# ------- Shared Parameters -------
DATADIR = "../data/slim_sims/"
SLIM = '~/src/SLiM_build/slim'

# the output of one BGS slim sim (simple_bgs.slim)
SIM_OUTPUTS = ["seldac.tsv.gz", "sub.tsv.gz", "treeseq.tree"]
ANNOT_FILES = ["../data/annotation/hg38_seqlens.tsv", 
               "../data/annotation/hapmap/genetic_map_GRCh37_chr10.txt", 
               "../data/annotation/conserved_by_chrom/chr10.bed"]

# ------- Simple BGS for B Maps -------
bgs_run = SlimRuns(config, dir=DATADIR)
bgs_run.generate()

# to get param order for SLiM file
#print(bgs_run.param_order)

bgs_results = bgs_run.targets(SIM_OUTPUTS)
print(list(itertools.islice(bgs_run.slim_commands(), 5)))

rule bgs_map:
  input: bgs_run.script, *ANNOT_FILES
  output: 
    bgs_run.wildcard_output(suffix=SIM_OUTPUTS)
  shell:
    bgs_run.slim_call(slim_cmd=SLIM)

#rule bgs_dac:
#  input:
#    bgs_run.wildcard_output("treeseq.tree")
#  output: 
#    bgs_run.wildcard_output("dac.tsv.gz")
#  shell:
#      f"""
#      python  ../tools/treeseq2dac.py --regions \
#        ../data/annotation/neutral_chr{{wildcards.chr}}.bed \
#        --recmap ../data/annotation/rec_100kb_chr{{wildcards.chr}}.bed \
#        --mu 2.5e-7 {{input}}
#      """
 

rule all:
  input:
    #sim_results, lls_results, fig_results, bgstrees_results
    bgs_results
