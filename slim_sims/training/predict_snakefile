import os
from os.path import join, split
import re

try:
    dir = config['dir']
except:
    raise ValueError("specify directory of chunks with --config dir=dnnb/")


try:
     h5_file = config['h5']
except:
    raise ValueError("specify Keras HDF5 model file with --config h5=model.h5")



chunks_dir = join(dir, 'chunks')
pred_dir = join(dir, 'preds')

# if this has len > 0, this is the set of chroms to include
chroms = set(['chr10'])

# first get all the chunks
b_chunk_files = []
for root, dirs, files in os.walk(chunks_dir):
    for file in files:
        # get chromosome directory
        chrom = split(root)[-1]
        if len(chroms) and chrom not in chroms:
            continue
        this_pred_dir = root.replace('chunks', 'preds')
        filepath = join(this_pred_dir, file)
        assert filepath.endswith('.npy')
        b_chunk_files.append(filepath)

assert len(b_chunk_files), "no chunk files found to predict!"

CHUNK_FILEPATH = join(chunks_dir, '{chromdir}/{chunkname}.npy') 
PRED_FILEPATH = join(pred_dir, '{chromdir}/{chunkname}.npy') 

rule all:
  input: b_chunk_files

rule predict:
  input: chunk=CHUNK_FILEPATH, dir=dir, h5=h5_file
  output: PRED_FILEPATH
  shell:
      """
      python ../../tools/predict.py --input-dir {input.dir} --h5 {input.h5} {input.chunk}
      """

