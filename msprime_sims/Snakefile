if not len(config):
    raise ValueError("config file not specified on command line, use --configfile config.json")

# config file should have filename pattern mprime_bgs_{name}.json, 
# as it's loaded elsewhere here
name = config['name']
type = config['type']

# network architectures to try
archs = [dict(n64=0, n32=2),
         dict(n64=0, n32=4),
         dict(n64=4, n32=2),
         dict(n64=8, n32=4),
         dict(n64=8, n32=8),
         dict(n64=8, n32=0),
         ]

sim_file = f"../data/msprime_sims/msprime_bgs_{name}.npz", 

# minus sim_file, which I run on a different machine
all_files = [f"../data/msprime_sims/msprime_bgs_{name}_data.pkl"]

NREPS = 2
fits = []
for arch in archs:
    for rep in range(NREPS):
        kwargs = {**arch, 'rep': rep}
        fits.append(f"../data/msprime_sims/fits/msprime_bgs_{name}_{{n64}}n64_{{n32}}n32_fit_{{rep}}rep.pkl".format(**kwargs))

all_files.extend(fits)

rule msprime:
  input: f"msprime_bgs_{name}.json"
  output: f"../data/msprime_sims/msprime_bgs_{name}.npz"
  params: nsamples=500_000
  threads: 30
  shell:
    """
    python ../tools/msprime_bgs.py --nsamples {params.nsamples} --ncores {threads} --outfile {output} --func {type} {input}
    """

rule process_data:
  input: json=f"msprime_bgs_{name}.json", npz=f"../data/msprime_sims/msprime_bgs_{name}.npz"
  output: f"../data/msprime_sims/msprime_bgs_{name}_data.pkl"
  shell:
     """
     python ../tools/fit_sims.py data --outfile {output} {input.json} {input.npz}
     """

rule fit_dnn:
  input: f"../data/msprime_sims/msprime_bgs_{name}_data.pkl"
  output: f"../data/msprime_sims/fits/msprime_bgs_{name}_{{n64}}n64_{{n32}}n32_fit_{{rep}}rep.pkl"
  shell:
     """
     python ../tools/fit_sims.py fit --outfile {output} --n64 {wildcards.n64} --n32 {wildcards.n32} {input} 
     """

rule sims:
  input: sim_file 

rule train:
  input: all_files

