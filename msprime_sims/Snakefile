all_files = ["../data/msprime_sims/msprime_bgs_simple.npz", 
             "../data/msprime_sims/msprime_bgs_segment.npz", 
             "../data/msprime_sims/msprime_bgs_simple_data.pkl", 
             "../data/msprime_sims/msprime_bgs_segment_data.pkl"]

archs = [dict(n64=0, n32=2),
         dict(n64=0, n32=4),
         dict(n64=4, n32=2),
         dict(n64=8, n32=4),
         dict(n64=8, n32=8),
         dict(n64=8, n32=0),
         ]

NREPS = 2
fits = []
for arch in archs:
    for rep in range(NREPS):
        kwargs = {**arch, 'rep': rep}
        fits.append("../data/msprime_sims/msprime_bgs_simple_{n64}n64_{n32}n32_{rep}_fit_{rep}rep.pkl".format(**kwargs))
        fits.append("../data/msprime_sims/msprime_bgs_segment_{n64}n64_{n32}n32_{rep}_fit_{rep}rep.pkl".format(**kwargs))

all_files.extend(fits)

rule msprime:
  input: "msprime_bgs_{run}.json"
  output: "../data/msprime_sims/msprime_bgs_{run}.npz"
  params: nsamples=500_000, ncores=70
  shell:
    """
    python ../tools/msprime_bgs.py --nsamples {params.nsamples} --ncores {params.ncores} --outfile {output} --func 'segment' {input}
    """

rule process_data:
  input: json="msprime_bgs_{run}.json", npz="../data/msprime_sims/msprime_bgs_{run}.npz"
  output: "../data/msprime_sims/msprime_bgs_{run}_data.pkl"
  shell:
     """
     python ../tools/fit_sims.py data {input.json} {input.npz}
     """


rule fit_fnn:
  input: "../data/msprime_sims/msprime_bgs_{run}_data.pkl"
  output: "../data/msprime_sims/msprime_bgs_{run}_{n64}n64_{n32}n32_{rep}_fit_{rep}rep.pkl"
  shell:
     """
     python ../tools/fit_sims.py fit --outfile {output} --n64 {wildcards.n64} --n32 {wildcards.n32} {input} 
     """

rule all:
  input: all_files

rule clean:
  shell: f"rm -f {' '.join(all_files)}"

