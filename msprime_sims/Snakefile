if not len(config):
    raise ValueError("config file not specified on command line, use --configfile config.json")

# config file should have filename pattern mprime_bgs_{name}.json, 
# as it's loaded elsewhere here
name = config['name']
model = config['model']

# network architectures to try
archs = [dict(n128=0, n64=0, n32=0, n8=1),
         dict(n128=0, n64=0, n32=1, n8=0),
         dict(n128=0, n64=1, n32=0, n8=0),
         dict(n128=1, n64=8, n32=8, n8=8),

         dict(n128=8, n64=8, n32=0, n8=0),
         dict(n128=8, n64=8, n32=0, n8=0),

         ]

activations = ['elu'] #, 'relu', 'tanh']

sim_file = f"../data/msprime_sims/msprime_bgs_{name}.npz", 

# the learned func, pickled
data_file = f"../data/msprime_sims/msprime_bgs_{name}_data.pkl"

NREPS = 2
dnn_files = []
for arch in archs:
    for activ in activations:
        for rep in range(NREPS):
            kwargs = {**arch, 'rep': rep, 'activ': activ}
            dnn_files.append(f"../data/msprime_sims/fits/{name}/msprime_bgs_{name}_{{n128}}n128_{{n64}}n64_{{n32}}n32_{{n8}}n8_{{activ}}activ_fit_{{rep}}rep.pkl".format(**kwargs))

rule msprime:
  input: f"msprime_bgs_{name}.json" # same as config file
  output: f"../data/msprime_sims/msprime_bgs_{name}.npz"
  params: nsamples=500_000, ncores=30
  shell:
    """
    python ../tools/msprime_bgs.py --nsamples {params.nsamples} --ncores {params.ncores} --outfile {output} --model {model} {input}
    """

rule process_data:
  input: json=f"msprime_bgs_{name}.json", npz=f"../data/msprime_sims/msprime_bgs_{name}.npz"
  output: f"../data/msprime_sims/msprime_bgs_{name}_data.pkl"
  shell:
     """
     python ../tools/fit_sims.py data --outfile {output} {input.json} {input.npz}
     """

rule fit_dnn:
  input: f"../data/msprime_sims/msprime_bgs_{name}_data.pkl"
  output: f"../data/msprime_sims/fits/{name}/msprime_bgs_{name}_{{n128}}n128_{{n64}}n64_{{n32}}n32_{{n8}}n8_{{activ}}activ_fit_{{rep}}rep.pkl"
  shell:
     """
     python ../tools/fit_sims.py fit --outfile {output} --batch-size 128 --n128 {wildcards.n128} --n64 {wildcards.n64} --n32 {wildcards.n32} --n8 {wildcards.n8} --activation {activ} {input} 
     """

rule sims:
  input: sim_file 

rule data:
  input: data_file

rule train:
  input: dnn_files 

